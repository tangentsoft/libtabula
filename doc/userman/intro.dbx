<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook V4.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<sect1 id="intro">
  <title>Introduction</title>

  <para>libtabula is a powerful C++ wrapper for multiple C database
  access libraries. The initial version supports MySQL, MariaDB, and
  SQLite. Its purpose is to make working with SQL queries as easy as
  working with STL containers.</para>

  <para>The latest version of libtabula can be found at <ulink
  url="http://libtabula.org/">libtabula.org</ulink>.</para>

  <para>Support for libtabula can be had on <ulink
  url="http://libtabula.org/ml/">the mailing list</ulink>. That
  page hosts the mailing list archives and tells you how you can
  subscribe.</para>


  <sect2 id="history">
    <title>A Brief History of libtabula</title>

    <para>libtabula is a fork of <ulink
    url="http://tangentsoft.net/mysql++/">MySQL++ 3.2.1</ulink>. (More
    on this at the end of this section.)</para>

    <para>MySQL++ was created in 1998 by Kevin Atkinson. It started out
    MySQL-specific, but there were early efforts to try and make it
    database-independent. You can see echoes of this in the old library
    name <filename>libsqlplus.*</filename> and in the naming of many of
    the classes. All of Kevin&#x2019;s releases had pre-1.0 version
    numbers.</para>

    <para>Then in 1999, <ulink url="http://www.mysql.com/">MySQL
    AB</ulink> took over development of the library. In the beginning,
    <ulink url="http://en.wikipedia.org/wiki/Monty_Widenius">Monty
    Widenius</ulink> himself did some of the work, but later gave it
    over to another MySQL employee, Sinisa Milivojevic. MySQL released
    versions 1.0 and 1.1, and then Kevin gave over maintenance to
    Sinisa officially with 1.2 and ceased to have any involvement with
    the library&#x2019;s maintenance. Sinisa went on to maintain the
    library through 1.7.9, released in mid-2001. During this time, the
    library&#x2019;s database-independent parts were left undeveloped,
    for obvious reasons.</para>

    <para>With version 1.7.9, MySQL++ went into a period of stasis,
    lasting over three years. During this time, Sinisa ran the MySQL++
    mailing list and supported its users, but made no new releases.
    Contributed patches were either ignored or put up on the MySQL++ web
    site for users to try, without any official blessing.</para>

    <para>In early August of 2004, Warren Young of <ulink
    url="http://etr-usa.com">Educational Technology Resources</ulink>
    got fed up with this lack of movement and took over maintenance of
    MySQL++. He released 1.7.10 later that month, which did little more
    than make the code build with GCC 3.3 without warnings. MySQL++
    grew and improved greatly via prototypical spurts-and-lulls open
    source development, culminating in MySQL++ 3.2.1 in December
    2013.</para>

    <para>In May 2014, Warren forked libtabula from MySQL++ in order to
    reignite the old dream of DBMS independence, reasoning that it would
    be awkward and confusing to continue calling it
    &#x201C;MySQL++&#x201D; when it works with more than just MySQL and
    its compatible forks. The initial version of libtabula adds support
    for SQLite, with the only barrier to additional DBMSes being the
    desire of people to write the code to add that support.</para>

    <para>This is a benign fork, not an angry fork. In a very real
    sense, libtabula is &#x201C;MySQL++ 4.0.&#x201D; It is a fork rather
    than just a new name since it moved to a new code repository and web
    site, and there is a chance that MySQL++ will continue to get some
    bug fixes and enhancements as libtabula stabilizes. At some point,
    however, libtabula should entirely replace MySQL++.</para>
  </sect2>


  <sect2 id="asking-questions">
    <title>If You Have Questions...</title>

    <para>If you want to email someone to ask questions about this
    library, we greatly prefer that you send mail to the <ulink
    url="http://libtabula.org/ml/">mailing list</ulink>. The mailing
    list is archived, so if you have questions, do a search to see
    if the question has been asked before.</para>

    <para>You may find people&#x2019;s individual email addresses
    in various files within the libtabula distribution. Please do
    not send mail to them unless you are sending something that
    is inherently personal. Not all of the principal developers of
    libtabula are still active in its development; those who have
    dropped out have no wish to be bugged about libtabula. Those of us
    still active in libtabula development monitor the mailing list,
    so you aren&#x2019;t getting any extra &#x201C;coverage&#x201D;
    by sending messages to additional email addresses.</para>
  </sect2>
</sect1>
