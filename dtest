#!/bin/bash

BASE="$(dirname "$0")"
BUILD=`pwd`
TMP=`mktemp bmXXXXXX`

# Run simple unit tests first.
typeset -i count=0
echo -n 'Running unit tests:'
for t in "$BUILD/test/"test_*
do
	if [ -x "$t" ]	# ignore .cpp files
	then
		errmsg=$("$BASE/exrun" "$t" 2>&1)
		errno=$?
		if [ "$errno" = 0 ]
		then
			count=count+1
		else
			rm -f $TMP
			echo " $t FAILED ($errno)"
			echo
			echo "$errmsg"
			exit $?
		fi
	fi
done
echo " $count tests succeeded"
echo 'All unit tests passed' >> $TMP

# Assume AUTO_INCREMENT id column in images table will get 1 in
# load_jpeg call below, since we reset the DB before doing it.
export QUERY_STRING=id=1

# Now run examples to test high-level behavior.  The repeated use of
# resetdb is intentional!  It's run after each example that changes
# the database in a way that will cause a subsequent example to fail
# because data it expects isn't present.
EX="$BUILD/examples"
echo -n 'Running examples:'
for ex in \
	$EX/resetdb $EX/simple[0-9] $EX/store_if $EX/for_each $EX/multiquery $EX/tquery1 \
	$EX/resetdb $EX/tquery[2-9] \
	$EX/resetdb $EX/ssqls[0-9] \
	$EX/load_jpeg $EX/cgi_jpeg
do
	eb=`basename $ex`
	if [ -x $ex ]
	then
		if [ "$eb" = "resetdb" ]
		then
			echo
			echo -n "   "
		fi
	
		echo -n "$eb "
		echo "---------------- BEGIN $eb OUTPUT ----------------" >> $TMP
		if ! $BASE/exrun $ex -D $* >> $TMP
		then
			echo
			echo 'TESTING ABORTED.'
			rm -f $TMP
			exit $?
		fi
		echo "================ END $eb OUTPUT ================" >> $TMP
		echo >> $TMP
	fi
done
echo

# Test ssqlsxlat -o.  Note that it suppresses stdout but keeps stderr
# so warnings about directives and line elements it doesn't understand
# aren't suppressed.  We run the first pass's output back through
# ssqlsxlat to deal with comments, whitespace differences, line element
# ordering, boolean value and type canonicalization, and other niggly
# differences we really don't care about.  diff -w isn't enough.
for f in $BASE/{examples,test}/*.ssqls
do
	bnf=`basename $f`
	echo -n "Testing ssqlsxlat -i $f -o..."
	echo "--- BEGIN ssqlsxlat -i $bnf -o ERROR OUTPUT ---" >> $TMP
	pass1=/tmp/dtest-ssxgv2-pass1-$bnf
	pass2=/tmp/dtest-ssxgv2-pass2-$bnf
	echo -n "pass 1"
	$BASE/exrun $BUILD/src/ssx/ssqlsxlat -i $f -o $pass1 > "$pass1".err 2>> $TMP
	echo -n ", pass 2"
	$BASE/exrun $BUILD/src/ssx/ssqlsxlat -i $pass1 -o $pass2 > "$pass2".err 2>> $TMP
	echo -n ", diff"
	diff $pass1 $pass2 > /dev/null >> $TMP
	echo "==== END ssqlsxlat -i $bnf -o ERROR OUTPUT ====" >> $TMP
	echo
done

# Check for any changes
BFILE=$BASE/bmark.txt
if [ -f $BFILE ]
then
	if diff -u -w $BFILE $TMP
	then
		echo
		echo 'All tests passed.'
	fi
	rm -f $TMP
else
	mv $TMP $BFILE
	chmod -w $BFILE
	echo
	echo 'BENCHMARK FILE REGENERATED.'
	echo
fi
